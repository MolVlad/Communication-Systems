% Домашнее задание №5. Символьная синхронизация
%> @file hw6.m
%> Используются функции: mapping.m, sqRCcoeff.m, filtration.m, 
% =========================================================================
%> Подготовка рабочего места
% =========================================================================
    %> Отчистка workspace
    clear all;
    %> Закрытие рисунков
    close all;
    %> Отчистка Command Window
    clc;
% =========================================================================
%> Генерация 
% =========================================================================
    Nbit = 100000;                % число бит
    bits = randi([0 1], 1, Nbit); % генерация бит
    sign = mapping (bits, 2);     % QPSK
% =========================================================================
% Фильтрация
% =========================================================================
    nsamp = 4;                    % число выборок на символ
    rolloff = 0.2;                % сглаживающий коэффициент
    span = 20;                    % длина фильтра
    UpSempFlag = true(1);         % с передескретизацией
    sqimpuls = sqRCcoeff (span, nsamp, rolloff);              % генерим фильтр
    filtsign = filtration(sign, sqimpuls, nsamp, UpSempFlag); % фильтруем
% =========================================================================
%> Сигнал без рассинхронизации времени момета выборки
% =========================================================================
    UpSempFlag = false(1);       % без передескретизации
    id_t_sing = filtration(filtsign, sqimpuls, nsamp, UpSempFlag); % фильтрация
    id_t_sing = id_t_sing(1:nsamp:end); % децимаия: выбираем 1 выборку на символ
    scatterplot (id_t_sing)
    title('Signal without time shift')
% =========================================================================
%> Добавляем рассинхронизацию по времени момента выборки
% =========================================================================
    % Гененируем случайное знаение временного сдвига
    time_delay = randi([-100, 100], 1, 1)/200;
    %> Инициализируем дробный временной сдвиг  
    TimeDelayObj = dsp.VariableFractionalDelay('InterpolationMethod', 'Farrow',...
                                                      'MaximumDelay', nsamp);
    tfSig = step(TimeDelayObj, filtsign.', time_delay);
% ========================================================================= 
% Смотрим что получилось
% =========================================================================
    UpSempFlag = false(1);       % без передескретизации
    t_sing = filtration(tfSig, sqimpuls, nsamp, UpSempFlag); % фильтрация
    d_t_sing = t_sing(1:nsamp:end); % децимаия: выбираем 1 выборку на символ
    scatterplot (d_t_sing)
    title('Signal with time shift')
% =========================================================================
%> Задаение: Дописать функцию реализующую символьную синхронизацию
% =========================================================================
    s_sing = SymSinc(t_sing);
% =========================================================================
%> Проверка 
% =========================================================================
    scatterplot (s_sing(10000:end))
    title('Signal after sinc')
